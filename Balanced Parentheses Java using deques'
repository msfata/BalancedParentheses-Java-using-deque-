package Palindrome;

import java.util.Deque;
import java.util.LinkedList;

public class BalancedParentheses {

	public static void main(String[] args) {
		System.out.println(isBalanced("{[[]}}"));
	}

	private static boolean isBalanced(String s) {

		Deque<Character> l = new LinkedList<Character>();
		char[] c = s.toCharArray();
		for (int i = 0; i < c.length; i++) {
			if (c[i] == '{' || c[i] == '[' || c[i] == '(' || c[i] == '}' || c[i] == ']' || c[i] == ')') {
				if (c[i] == '{' || c[i] == '[' || c[i] == '(') {
					l.push(c[i]);
				} else {
					if (c[i] == '}') {
						if (l.isEmpty() || l.pop() != '{') {
							return false;
						}
					}
					if (c[i] == ']') {
						if (l.isEmpty() || l.pop() != '[') {
							return false;
						}
					}
					if (c[i] == ')') {
						if (l.isEmpty() || l.pop() != '(') {
							return false;
						}
					}
				}

			} else {
				return false;
			}
		}
		return l.isEmpty();

	}
}
